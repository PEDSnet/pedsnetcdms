"""Initial

Revision ID: cfbd6d35cab
Revises: 
Create Date: 2015-03-04 04:13:56.547992

"""

# revision identifiers, used by Alembic.
revision = 'cfbd6d35cab'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('zip', sa.String(length=9), nullable=True),
    sa.Column('county', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('address_1', sa.String(length=100), nullable=True),
    sa.Column('address_2', sa.String(length=100), nullable=True),
    sa.Column('location_source_value', sa.String(length=300), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('location_id', name=op.f('pk_location'))
    )
    op.create_index(op.f('ix_location_location_id'), 'location', ['location_id'], unique=False, postgresql_ops={})
    op.create_table('cohort',
    sa.Column('cohort_end_date', sa.DateTime(), nullable=True),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('stop_reason', sa.String(length=100), nullable=True),
    sa.Column('cohort_concept_id', sa.Integer(), nullable=False),
    sa.Column('cohort_start_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('cohort_id', name=op.f('pk_cohort'))
    )
    op.create_index(op.f('ix_cohort_cohort_id'), 'cohort', ['cohort_id'], unique=False, postgresql_ops={})
    op.create_table('organization',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('place_of_service_concept_id', sa.Integer(), nullable=True),
    sa.Column('place_of_service_source_value', sa.String(length=100), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('organization_source_value', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], [u'location.location_id'], name=op.f('fk_organization_location_id_location')),
    sa.PrimaryKeyConstraint('organization_id', name=op.f('pk_organization')),
    sa.UniqueConstraint('organization_source_value', name=op.f('uq_organization_organization_source_value'))
    )
    op.create_index(op.f('ix_organization_location_id'), 'organization', ['location_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_organization_organization_id'), 'organization', ['organization_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_organization_organization_source_value_place_of_service_source_value'), 'organization', ['organization_source_value', 'place_of_service_source_value'], unique=False, postgresql_ops={u'place_of_service_source_value': u'varchar_pattern_ops', u'organization_source_value': u'varchar_pattern_ops'})
    op.create_table('care_site',
    sa.Column('place_of_service_source_value', sa.String(length=100), nullable=True),
    sa.Column('place_of_service_concept_id', sa.Integer(), nullable=True),
    sa.Column('care_site_source_value', sa.String(length=100), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('care_site_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], [u'location.location_id'], name=op.f('fk_care_site_location_id_location')),
    sa.ForeignKeyConstraint(['organization_id'], [u'organization.organization_id'], name=op.f('fk_care_site_organization_id_organization')),
    sa.PrimaryKeyConstraint('care_site_id', name=op.f('pk_care_site')),
    sa.UniqueConstraint('organization_id', 'care_site_source_value', name=op.f('uq_care_site_organization_id_care_site_source_value'))
    )
    op.create_index(op.f('ix_care_site_care_site_id'), 'care_site', ['care_site_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_care_site_location_id'), 'care_site', ['location_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_care_site_organization_id'), 'care_site', ['organization_id'], unique=False, postgresql_ops={})
    op.create_table('provider',
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('npi', sa.String(length=20), nullable=True),
    sa.Column('specialty_concept_id', sa.Integer(), nullable=True),
    sa.Column('provider_source_value', sa.String(length=100), nullable=False),
    sa.Column('dea', sa.String(length=20), nullable=True),
    sa.Column('care_site_id', sa.Integer(), nullable=False),
    sa.Column('specialty_source_value', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['care_site_id'], [u'care_site.care_site_id'], name=op.f('fk_provider_care_site_id_care_site')),
    sa.PrimaryKeyConstraint('provider_id', name=op.f('pk_provider'))
    )
    op.create_index(op.f('ix_provider_care_site_id'), 'provider', ['care_site_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_provider_provider_id'), 'provider', ['provider_id'], unique=False, postgresql_ops={})
    op.create_table('person',
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('ethnicity_concept_id', sa.Integer(), nullable=True),
    sa.Column('ethnicity_source_value', sa.String(length=50), nullable=True),
    sa.Column('person_source_value', sa.String(length=100), nullable=False),
    sa.Column('month_of_birth', sa.Numeric(precision=2, scale=0), nullable=True),
    sa.Column('pn_time_of_birth', sa.DateTime(), nullable=True),
    sa.Column('day_of_birth', sa.Numeric(precision=2, scale=0), nullable=True),
    sa.Column('year_of_birth', sa.Numeric(precision=4, scale=0), nullable=False),
    sa.Column('gender_source_value', sa.String(length=50), nullable=True),
    sa.Column('race_source_value', sa.String(length=50), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('care_site_id', sa.Integer(), nullable=False),
    sa.Column('gender_concept_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('race_concept_id', sa.Integer(), nullable=True),
    sa.Column('pn_gestational_age', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['care_site_id'], [u'care_site.care_site_id'], name=op.f('fk_person_care_site_id_care_site')),
    sa.ForeignKeyConstraint(['location_id'], [u'location.location_id'], name=op.f('fk_person_location_id_location')),
    sa.ForeignKeyConstraint(['provider_id'], [u'provider.provider_id'], name=op.f('fk_person_provider_id_provider')),
    sa.PrimaryKeyConstraint('person_id', name=op.f('pk_person')),
    sa.UniqueConstraint('person_source_value', name=op.f('uq_person_person_source_value'))
    )
    op.create_index(op.f('ix_person_care_site_id'), 'person', ['care_site_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_person_location_id'), 'person', ['location_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_person_person_id'), 'person', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_person_provider_id'), 'person', ['provider_id'], unique=False, postgresql_ops={})
    op.create_table('death',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('death_type_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('death_date', sa.DateTime(), nullable=False),
    sa.Column('cause_of_death_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('cause_of_death_source_value', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_death_person_id_person')),
    sa.PrimaryKeyConstraint('person_id', 'death_type_concept_id', 'cause_of_death_concept_id', name=op.f('pk_death'))
    )
    op.create_index(op.f('ix_death_person_id'), 'death', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_death_person_id_death_type_concept_id_cause_of_death_concept_id'), 'death', ['person_id', 'death_type_concept_id', 'cause_of_death_concept_id'], unique=False, postgresql_ops={})
    op.create_table('visit_occurrence',
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('place_of_service_concept_id', sa.Integer(), nullable=False),
    sa.Column('visit_start_date', sa.DateTime(), nullable=False),
    sa.Column('place_of_service_source_value', sa.String(length=100), nullable=True),
    sa.Column('visit_end_date', sa.DateTime(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('care_site_id', sa.Integer(), nullable=True),
    sa.Column('visit_occurrence_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_visit_occurrence_person_id_person')),
    sa.PrimaryKeyConstraint('visit_occurrence_id', name=op.f('pk_visit_occurrence'))
    )
    op.create_index(op.f('ix_visit_occurrence_person_id'), 'visit_occurrence', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_visit_occurrence_person_id_visit_start_date'), 'visit_occurrence', ['person_id', 'visit_start_date'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_visit_occurrence_visit_occurrence_id'), 'visit_occurrence', ['visit_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('payer_plan_period',
    sa.Column('plan_source_value', sa.String(length=100), nullable=True),
    sa.Column('family_source_value', sa.String(length=100), nullable=True),
    sa.Column('payer_plan_period_id', sa.Integer(), nullable=False),
    sa.Column('payer_plan_period_end_date', sa.DateTime(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('payer_source_value', sa.String(length=100), nullable=True),
    sa.Column('payer_plan_period_start_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_payer_plan_period_person_id_person')),
    sa.PrimaryKeyConstraint('payer_plan_period_id', name=op.f('pk_payer_plan_period'))
    )
    op.create_index(op.f('ix_payer_plan_period_payer_plan_period_id'), 'payer_plan_period', ['payer_plan_period_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_payer_plan_period_person_id'), 'payer_plan_period', ['person_id'], unique=False, postgresql_ops={})
    op.create_table('drug_era',
    sa.Column('drug_era_end_date', sa.DateTime(), nullable=False),
    sa.Column('drug_era_start_date', sa.DateTime(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('drug_era_id', sa.Integer(), nullable=False),
    sa.Column('drug_exposure_count', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.Column('drug_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('drug_concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_drug_era_person_id_person')),
    sa.PrimaryKeyConstraint('drug_era_id', name=op.f('pk_drug_era'))
    )
    op.create_index(op.f('ix_drug_era_drug_era_id'), 'drug_era', ['drug_era_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_era_person_id'), 'drug_era', ['person_id'], unique=False, postgresql_ops={})
    op.create_table('observation_period',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('observation_period_end_date', sa.DateTime(), nullable=True),
    sa.Column('observation_period_start_date', sa.DateTime(), nullable=False),
    sa.Column('observation_period_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_observation_period_person_id_person')),
    sa.PrimaryKeyConstraint('observation_period_id', name=op.f('pk_observation_period'))
    )
    op.create_index(op.f('ix_observation_period_observation_period_id'), 'observation_period', ['observation_period_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_period_person_id'), 'observation_period', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_period_person_id_observation_period_start_date'), 'observation_period', ['person_id', 'observation_period_start_date'], unique=False, postgresql_ops={})
    op.create_table('condition_era',
    sa.Column('condition_concept_id', sa.Integer(), nullable=False),
    sa.Column('condition_occurrence_count', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.Column('condition_era_id', sa.Integer(), nullable=False),
    sa.Column('condition_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('condition_era_start_date', sa.DateTime(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('condition_era_end_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_condition_era_person_id_person')),
    sa.PrimaryKeyConstraint('condition_era_id', name=op.f('pk_condition_era'))
    )
    op.create_index(op.f('ix_condition_era_condition_era_id'), 'condition_era', ['condition_era_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_condition_era_person_id'), 'condition_era', ['person_id'], unique=False, postgresql_ops={})
    op.create_table('observation',
    sa.Column('range_high', sa.Numeric(precision=14, scale=3), nullable=True),
    sa.Column('observation_concept_id', sa.Integer(), nullable=False),
    sa.Column('range_low', sa.Numeric(precision=14, scale=3), nullable=True),
    sa.Column('observation_id', sa.Integer(), nullable=False),
    sa.Column('relevant_condition_concept_id', sa.Integer(), nullable=True),
    sa.Column('observation_time', sa.DateTime(), nullable=True),
    sa.Column('unit_concept_id', sa.Integer(), nullable=True),
    sa.Column('value_as_number', sa.Numeric(precision=14, scale=3), nullable=True),
    sa.Column('observation_source_value', sa.String(length=100), nullable=True),
    sa.Column('value_as_string', sa.String(length=4000), nullable=True),
    sa.Column('observation_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('observation_date', sa.DateTime(), nullable=False),
    sa.Column('value_as_concept_id', sa.Integer(), nullable=True),
    sa.Column('associated_provider_id', sa.Integer(), nullable=True),
    sa.Column('visit_occurrence_id', sa.Integer(), nullable=True),
    sa.Column('units_source_value', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['associated_provider_id'], [u'provider.provider_id'], name=op.f('fk_observation_associated_provider_id_provider')),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_observation_person_id_person')),
    sa.ForeignKeyConstraint(['visit_occurrence_id'], [u'visit_occurrence.visit_occurrence_id'], name=op.f('fk_observation_visit_occurrence_id_visit_occurrence')),
    sa.PrimaryKeyConstraint('observation_id', name=op.f('pk_observation'))
    )
    op.create_index(op.f('ix_observation_associated_provider_id'), 'observation', ['associated_provider_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_observation_id'), 'observation', ['observation_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_person_id'), 'observation', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_person_id_observation_concept_id'), 'observation', ['person_id', 'observation_concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_observation_visit_occurrence_id'), 'observation', ['visit_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('drug_exposure',
    sa.Column('refills', sa.Numeric(precision=3, scale=0), nullable=True),
    sa.Column('stop_reason', sa.String(length=100), nullable=True),
    sa.Column('relevant_condition_concept_id', sa.Integer(), nullable=True),
    sa.Column('days_supply', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.Column('drug_exposure_start_date', sa.DateTime(), nullable=False),
    sa.Column('prescribing_provider_id', sa.Integer(), nullable=True),
    sa.Column('sig', sa.String(length=500), nullable=True),
    sa.Column('drug_exposure_id', sa.Integer(), nullable=False),
    sa.Column('drug_source_value', sa.String(length=100), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('drug_exposure_end_date', sa.DateTime(), nullable=True),
    sa.Column('visit_occurrence_id', sa.Integer(), nullable=True),
    sa.Column('drug_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('drug_concept_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_drug_exposure_person_id_person')),
    sa.ForeignKeyConstraint(['prescribing_provider_id'], [u'provider.provider_id'], name=op.f('fk_drug_exposure_prescribing_provider_id_provider')),
    sa.ForeignKeyConstraint(['visit_occurrence_id'], [u'visit_occurrence.visit_occurrence_id'], name=op.f('fk_drug_exposure_visit_occurrence_id_visit_occurrence')),
    sa.PrimaryKeyConstraint('drug_exposure_id', name=op.f('pk_drug_exposure'))
    )
    op.create_index(op.f('ix_drug_exposure_drug_exposure_id'), 'drug_exposure', ['drug_exposure_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_exposure_person_id'), 'drug_exposure', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_exposure_prescribing_provider_id'), 'drug_exposure', ['prescribing_provider_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_exposure_visit_occurrence_id'), 'drug_exposure', ['visit_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('procedure_occurrence',
    sa.Column('procedure_concept_id', sa.Integer(), nullable=False),
    sa.Column('relevant_condition_concept_id', sa.Integer(), nullable=True),
    sa.Column('procedure_date', sa.DateTime(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('procedure_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('procedure_source_value', sa.String(length=100), nullable=True),
    sa.Column('procedure_occurrence_id', sa.Integer(), nullable=False),
    sa.Column('associated_provider_id', sa.Integer(), nullable=True),
    sa.Column('visit_occurrence_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['associated_provider_id'], [u'provider.provider_id'], name=op.f('fk_procedure_occurrence_associated_provider_id_provider')),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_procedure_occurrence_person_id_person')),
    sa.ForeignKeyConstraint(['visit_occurrence_id'], [u'visit_occurrence.visit_occurrence_id'], name=op.f('fk_procedure_occurrence_visit_occurrence_id_visit_occurrence')),
    sa.PrimaryKeyConstraint('procedure_occurrence_id', name=op.f('pk_procedure_occurrence'))
    )
    op.create_index(op.f('ix_procedure_occurrence_associated_provider_id'), 'procedure_occurrence', ['associated_provider_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_procedure_occurrence_person_id'), 'procedure_occurrence', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_procedure_occurrence_procedure_occurrence_id'), 'procedure_occurrence', ['procedure_occurrence_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_procedure_occurrence_visit_occurrence_id'), 'procedure_occurrence', ['visit_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('condition_occurrence',
    sa.Column('condition_concept_id', sa.Integer(), nullable=False),
    sa.Column('condition_type_concept_id', sa.Integer(), nullable=False),
    sa.Column('stop_reason', sa.String(length=100), nullable=True),
    sa.Column('condition_start_date', sa.DateTime(), nullable=False),
    sa.Column('condition_end_date', sa.DateTime(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('condition_source_value', sa.String(length=100), nullable=True),
    sa.Column('condition_occurrence_id', sa.Integer(), nullable=False),
    sa.Column('associated_provider_id', sa.Integer(), nullable=True),
    sa.Column('visit_occurrence_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['associated_provider_id'], [u'provider.provider_id'], name=op.f('fk_condition_occurrence_associated_provider_id_provider')),
    sa.ForeignKeyConstraint(['person_id'], [u'person.person_id'], name=op.f('fk_condition_occurrence_person_id_person')),
    sa.ForeignKeyConstraint(['visit_occurrence_id'], [u'visit_occurrence.visit_occurrence_id'], name=op.f('fk_condition_occurrence_visit_occurrence_id_visit_occurrence')),
    sa.PrimaryKeyConstraint('condition_occurrence_id', name=op.f('pk_condition_occurrence'))
    )
    op.create_index(op.f('ix_condition_occurrence_associated_provider_id'), 'condition_occurrence', ['associated_provider_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_condition_occurrence_condition_occurrence_id'), 'condition_occurrence', ['condition_occurrence_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_condition_occurrence_person_id'), 'condition_occurrence', ['person_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_condition_occurrence_visit_occurrence_id'), 'condition_occurrence', ['visit_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('procedure_cost',
    sa.Column('total_out_of_pocket', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('revenue_code_source_value', sa.String(length=100), nullable=True),
    sa.Column('paid_toward_deductible', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('revenue_code_concept_id', sa.Integer(), nullable=True),
    sa.Column('payer_plan_period_id', sa.Integer(), nullable=True),
    sa.Column('paid_by_payer', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('procedure_cost_id', sa.Integer(), nullable=False),
    sa.Column('paid_copay', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('paid_coinsurance', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('paid_by_coordination_benefits', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('procedure_occurrence_id', sa.Integer(), nullable=False),
    sa.Column('total_paid', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('disease_class_concept_id', sa.Integer(), nullable=True),
    sa.Column('disease_class_source_value', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['payer_plan_period_id'], [u'payer_plan_period.payer_plan_period_id'], name=op.f('fk_procedure_cost_payer_plan_period_id_payer_plan_period')),
    sa.ForeignKeyConstraint(['procedure_occurrence_id'], [u'procedure_occurrence.procedure_occurrence_id'], name=op.f('fk_procedure_cost_procedure_occurrence_id_procedure_occurrence')),
    sa.PrimaryKeyConstraint('procedure_cost_id', name=op.f('pk_procedure_cost'))
    )
    op.create_index(op.f('ix_procedure_cost_payer_plan_period_id'), 'procedure_cost', ['payer_plan_period_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_procedure_cost_procedure_cost_id'), 'procedure_cost', ['procedure_cost_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_procedure_cost_procedure_occurrence_id'), 'procedure_cost', ['procedure_occurrence_id'], unique=False, postgresql_ops={})
    op.create_table('drug_cost',
    sa.Column('total_out_of_pocket', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('paid_toward_deductible', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('payer_plan_period_id', sa.Integer(), nullable=True),
    sa.Column('drug_cost_id', sa.Integer(), nullable=False),
    sa.Column('paid_by_payer', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('drug_exposure_id', sa.Integer(), nullable=False),
    sa.Column('paid_copay', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('paid_coinsurance', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('paid_by_coordination_benefits', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('average_wholesale_price', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('ingredient_cost', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('total_paid', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('dispensing_fee', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['drug_exposure_id'], [u'drug_exposure.drug_exposure_id'], name=op.f('fk_drug_cost_drug_exposure_id_drug_exposure')),
    sa.ForeignKeyConstraint(['payer_plan_period_id'], [u'payer_plan_period.payer_plan_period_id'], name=op.f('fk_drug_cost_payer_plan_period_id_payer_plan_period')),
    sa.PrimaryKeyConstraint('drug_cost_id', name=op.f('pk_drug_cost'))
    )
    op.create_index(op.f('ix_drug_cost_drug_cost_id'), 'drug_cost', ['drug_cost_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_cost_drug_exposure_id'), 'drug_cost', ['drug_exposure_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_drug_cost_payer_plan_period_id'), 'drug_cost', ['payer_plan_period_id'], unique=False, postgresql_ops={})
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_drug_cost_payer_plan_period_id'), table_name='drug_cost')
    op.drop_index(op.f('ix_drug_cost_drug_exposure_id'), table_name='drug_cost')
    op.drop_index(op.f('ix_drug_cost_drug_cost_id'), table_name='drug_cost')
    op.drop_table('drug_cost')
    op.drop_index(op.f('ix_procedure_cost_procedure_occurrence_id'), table_name='procedure_cost')
    op.drop_index(op.f('ix_procedure_cost_procedure_cost_id'), table_name='procedure_cost')
    op.drop_index(op.f('ix_procedure_cost_payer_plan_period_id'), table_name='procedure_cost')
    op.drop_table('procedure_cost')
    op.drop_index(op.f('ix_condition_occurrence_visit_occurrence_id'), table_name='condition_occurrence')
    op.drop_index(op.f('ix_condition_occurrence_person_id'), table_name='condition_occurrence')
    op.drop_index(op.f('ix_condition_occurrence_condition_occurrence_id'), table_name='condition_occurrence')
    op.drop_index(op.f('ix_condition_occurrence_associated_provider_id'), table_name='condition_occurrence')
    op.drop_table('condition_occurrence')
    op.drop_index(op.f('ix_procedure_occurrence_visit_occurrence_id'), table_name='procedure_occurrence')
    op.drop_index(op.f('ix_procedure_occurrence_procedure_occurrence_id'), table_name='procedure_occurrence')
    op.drop_index(op.f('ix_procedure_occurrence_person_id'), table_name='procedure_occurrence')
    op.drop_index(op.f('ix_procedure_occurrence_associated_provider_id'), table_name='procedure_occurrence')
    op.drop_table('procedure_occurrence')
    op.drop_index(op.f('ix_drug_exposure_visit_occurrence_id'), table_name='drug_exposure')
    op.drop_index(op.f('ix_drug_exposure_prescribing_provider_id'), table_name='drug_exposure')
    op.drop_index(op.f('ix_drug_exposure_person_id'), table_name='drug_exposure')
    op.drop_index(op.f('ix_drug_exposure_drug_exposure_id'), table_name='drug_exposure')
    op.drop_table('drug_exposure')
    op.drop_index(op.f('ix_observation_visit_occurrence_id'), table_name='observation')
    op.drop_index(op.f('ix_observation_person_id_observation_concept_id'), table_name='observation')
    op.drop_index(op.f('ix_observation_person_id'), table_name='observation')
    op.drop_index(op.f('ix_observation_observation_id'), table_name='observation')
    op.drop_index(op.f('ix_observation_associated_provider_id'), table_name='observation')
    op.drop_table('observation')
    op.drop_index(op.f('ix_condition_era_person_id'), table_name='condition_era')
    op.drop_index(op.f('ix_condition_era_condition_era_id'), table_name='condition_era')
    op.drop_table('condition_era')
    op.drop_index(op.f('ix_observation_period_person_id_observation_period_start_date'), table_name='observation_period')
    op.drop_index(op.f('ix_observation_period_person_id'), table_name='observation_period')
    op.drop_index(op.f('ix_observation_period_observation_period_id'), table_name='observation_period')
    op.drop_table('observation_period')
    op.drop_index(op.f('ix_drug_era_person_id'), table_name='drug_era')
    op.drop_index(op.f('ix_drug_era_drug_era_id'), table_name='drug_era')
    op.drop_table('drug_era')
    op.drop_index(op.f('ix_payer_plan_period_person_id'), table_name='payer_plan_period')
    op.drop_index(op.f('ix_payer_plan_period_payer_plan_period_id'), table_name='payer_plan_period')
    op.drop_table('payer_plan_period')
    op.drop_index(op.f('ix_visit_occurrence_visit_occurrence_id'), table_name='visit_occurrence')
    op.drop_index(op.f('ix_visit_occurrence_person_id_visit_start_date'), table_name='visit_occurrence')
    op.drop_index(op.f('ix_visit_occurrence_person_id'), table_name='visit_occurrence')
    op.drop_table('visit_occurrence')
    op.drop_index(op.f('ix_death_person_id_death_type_concept_id_cause_of_death_concept_id'), table_name='death')
    op.drop_index(op.f('ix_death_person_id'), table_name='death')
    op.drop_table('death')
    op.drop_index(op.f('ix_person_provider_id'), table_name='person')
    op.drop_index(op.f('ix_person_person_id'), table_name='person')
    op.drop_index(op.f('ix_person_location_id'), table_name='person')
    op.drop_index(op.f('ix_person_care_site_id'), table_name='person')
    op.drop_table('person')
    op.drop_index(op.f('ix_provider_provider_id'), table_name='provider')
    op.drop_index(op.f('ix_provider_care_site_id'), table_name='provider')
    op.drop_table('provider')
    op.drop_index(op.f('ix_care_site_organization_id'), table_name='care_site')
    op.drop_index(op.f('ix_care_site_location_id'), table_name='care_site')
    op.drop_index(op.f('ix_care_site_care_site_id'), table_name='care_site')
    op.drop_table('care_site')
    op.drop_index(op.f('ix_organization_organization_source_value_place_of_service_source_value'), table_name='organization')
    op.drop_index(op.f('ix_organization_organization_id'), table_name='organization')
    op.drop_index(op.f('ix_organization_location_id'), table_name='organization')
    op.drop_table('organization')
    op.drop_index(op.f('ix_cohort_cohort_id'), table_name='cohort')
    op.drop_table('cohort')
    op.drop_index(op.f('ix_location_location_id'), table_name='location')
    op.drop_table('location')
    ### end Alembic commands ###
