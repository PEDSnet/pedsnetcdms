"""Initial

Revision ID: 1f1e9d3f7891
Revises: 
Create Date: 2015-03-04 04:14:06.639097

"""

# revision identifiers, used by Alembic.
revision = '1f1e9d3f7891'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diagnosis',
    sa.Column('raw_dx', sa.String(length=1028), nullable=True),
    sa.Column('pdx', sa.String(length=2), nullable=True),
    sa.Column('raw_dx_source', sa.String(length=1028), nullable=True),
    sa.Column('encounterid', sa.String(length=1028), nullable=False),
    sa.Column('dx_type', sa.String(length=2), nullable=False),
    sa.Column('enc_type', sa.String(length=2), nullable=True),
    sa.Column('raw_pdx', sa.String(length=1028), nullable=True),
    sa.Column('providerid', sa.String(length=1028), nullable=True),
    sa.Column('raw_dx_type', sa.String(length=1028), nullable=True),
    sa.Column('admit_date', sa.String(length=10), nullable=True),
    sa.Column('patid', sa.String(length=1028), nullable=False),
    sa.Column('dx', sa.String(length=18), nullable=False),
    sa.Column('dx_source', sa.String(length=2), nullable=True),
    sa.PrimaryKeyConstraint('patid', 'encounterid', 'dx', 'dx_type', name=op.f('pk_diagnosis'))
    )
    op.create_index(op.f('ix_diagnosis_patid_encounterid_dx_dx_type'), 'diagnosis', ['patid', 'encounterid', 'dx', 'dx_type'], unique=False, postgresql_ops={u'encounterid': u'varchar_pattern_ops', u'dx_type': u'varchar_pattern_ops', u'patid': u'varchar_pattern_ops', u'dx': u'varchar_pattern_ops'})
    op.create_table('vital',
    sa.Column('vitalid', sa.Integer(), nullable=False),
    sa.Column('original_bmi', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('measure_date', sa.String(length=10), nullable=True),
    sa.Column('measure_time', sa.String(length=5), nullable=True),
    sa.Column('encounterid', sa.String(length=1028), nullable=True),
    sa.Column('ht', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('raw_diastolic', sa.String(length=1028), nullable=True),
    sa.Column('wt', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('systolic', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.Column('patid', sa.String(length=1028), nullable=True),
    sa.Column('bp_position', sa.String(length=2), nullable=True),
    sa.Column('raw_bp_position', sa.String(length=1028), nullable=True),
    sa.Column('vital_source', sa.String(length=2), nullable=True),
    sa.Column('raw_vital_source', sa.String(length=1028), nullable=True),
    sa.Column('raw_systolic', sa.String(length=1028), nullable=True),
    sa.Column('diastolic', sa.Numeric(precision=4, scale=0), nullable=True),
    sa.PrimaryKeyConstraint('vitalid', name=op.f('pk_vital'))
    )
    op.create_index(op.f('ix_vital_vitalid'), 'vital', ['vitalid'], unique=False, postgresql_ops={})
    op.create_table('procedure',
    sa.Column('px', sa.String(length=18), nullable=False),
    sa.Column('encounterid', sa.String(length=1028), nullable=False),
    sa.Column('enc_type', sa.String(length=2), nullable=True),
    sa.Column('providerid', sa.String(length=1028), nullable=True),
    sa.Column('admit_date', sa.String(length=10), nullable=True),
    sa.Column('patid', sa.String(length=1028), nullable=False),
    sa.Column('raw_px_type', sa.String(length=1028), nullable=True),
    sa.Column('px_type', sa.String(length=2), nullable=False),
    sa.Column('raw_px', sa.String(length=1028), nullable=True),
    sa.PrimaryKeyConstraint('patid', 'encounterid', 'px', 'px_type', name=op.f('pk_procedure'))
    )
    op.create_index(op.f('ix_procedure_patid_encounterid_px_px_type'), 'procedure', ['patid', 'encounterid', 'px', 'px_type'], unique=False, postgresql_ops={u'px_type': u'varchar_pattern_ops', u'px': u'varchar_pattern_ops', u'encounterid': u'varchar_pattern_ops', u'patid': u'varchar_pattern_ops'})
    op.create_table('encounter',
    sa.Column('admitting_source', sa.String(length=2), nullable=True),
    sa.Column('discharge_disposition', sa.String(length=2), nullable=True),
    sa.Column('facilityid', sa.String(length=1028), nullable=True),
    sa.Column('raw_enc_type', sa.String(length=1028), nullable=True),
    sa.Column('discharge_date', sa.String(length=10), nullable=True),
    sa.Column('admit_time', sa.String(length=5), nullable=True),
    sa.Column('discharge_time', sa.String(length=5), nullable=True),
    sa.Column('encounterid', sa.String(length=1028), nullable=False),
    sa.Column('raw_discharge_disposition', sa.String(length=1028), nullable=True),
    sa.Column('enc_type', sa.String(length=2), nullable=True),
    sa.Column('raw_discharge_status', sa.String(length=1028), nullable=True),
    sa.Column('drg', sa.String(length=3), nullable=True),
    sa.Column('providerid', sa.String(length=1028), nullable=True),
    sa.Column('admit_date', sa.String(length=10), nullable=True),
    sa.Column('patid', sa.String(length=1028), nullable=False),
    sa.Column('drg_type', sa.String(length=2), nullable=True),
    sa.Column('raw_admitting_source', sa.String(length=1028), nullable=True),
    sa.Column('discharge_status', sa.String(length=2), nullable=True),
    sa.Column('facility_location', sa.String(length=3), nullable=True),
    sa.Column('raw_drg_type', sa.String(length=1028), nullable=True),
    sa.PrimaryKeyConstraint('patid', 'encounterid', name=op.f('pk_encounter'))
    )
    op.create_index(op.f('ix_encounter_patid_encounterid'), 'encounter', ['patid', 'encounterid'], unique=False, postgresql_ops={u'encounterid': u'varchar_pattern_ops', u'patid': u'varchar_pattern_ops'})
    op.create_table('demographic',
    sa.Column('raw_hispanic', sa.String(length=1028), nullable=True),
    sa.Column('raw_sex', sa.String(length=1028), nullable=True),
    sa.Column('raw_race', sa.String(length=1028), nullable=True),
    sa.Column('sex', sa.String(length=2), nullable=True),
    sa.Column('hispanic', sa.String(length=2), nullable=True),
    sa.Column('race', sa.String(length=2), nullable=True),
    sa.Column('patid', sa.String(length=1028), nullable=False),
    sa.Column('birth_date', sa.String(length=10), nullable=True),
    sa.Column('biobank_flag', sa.String(length=1), nullable=True),
    sa.Column('birth_time', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('patid', name=op.f('pk_demographic'))
    )
    op.create_index(op.f('ix_demographic_patid'), 'demographic', ['patid'], unique=False, postgresql_ops={u'patid': u'varchar_pattern_ops'})
    op.create_table('enrollment',
    sa.Column('chart', sa.String(length=1), nullable=True),
    sa.Column('enr_basis', sa.String(length=1), nullable=False),
    sa.Column('patid', sa.String(length=1028), nullable=False),
    sa.Column('enr_end_date', sa.String(length=10), nullable=True),
    sa.Column('enr_start_date', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('patid', 'enr_start_date', 'enr_basis', name=op.f('pk_enrollment'))
    )
    op.create_index(op.f('ix_enrollment_patid_enr_start_date_enr_basis'), 'enrollment', ['patid', 'enr_start_date', 'enr_basis'], unique=False, postgresql_ops={u'enr_basis': u'varchar_pattern_ops', u'patid': u'varchar_pattern_ops', u'enr_start_date': u'varchar_pattern_ops'})
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_enrollment_patid_enr_start_date_enr_basis'), table_name='enrollment')
    op.drop_table('enrollment')
    op.drop_index(op.f('ix_demographic_patid'), table_name='demographic')
    op.drop_table('demographic')
    op.drop_index(op.f('ix_encounter_patid_encounterid'), table_name='encounter')
    op.drop_table('encounter')
    op.drop_index(op.f('ix_procedure_patid_encounterid_px_px_type'), table_name='procedure')
    op.drop_table('procedure')
    op.drop_index(op.f('ix_vital_vitalid'), table_name='vital')
    op.drop_table('vital')
    op.drop_index(op.f('ix_diagnosis_patid_encounterid_dx_dx_type'), table_name='diagnosis')
    op.drop_table('diagnosis')
    ### end Alembic commands ###
