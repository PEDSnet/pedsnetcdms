"""Initial

Revision ID: 146969ca84d7
Revises: 
Create Date: 2015-03-04 04:14:17.011391

"""

# revision identifiers, used by Alembic.
revision = '146969ca84d7'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vocabulary',
    sa.Column('vocabulary_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('vocabulary_name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('vocabulary_id', name=op.f('pk_vocabulary')),
    sa.UniqueConstraint('vocabulary_name', name=op.f('uq_vocabulary_vocabulary_name'))
    )
    op.create_index(op.f('ix_vocabulary_vocabulary_id'), 'vocabulary', ['vocabulary_id'], unique=False, postgresql_ops={})
    op.create_table('drug_approval',
    sa.Column('ingredient_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('approved_by', sa.String(length=20), nullable=False),
    sa.Column('approval_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('ingredient_concept_id', name=op.f('pk_drug_approval'))
    )
    op.create_index(op.f('ix_drug_approval_ingredient_concept_id'), 'drug_approval', ['ingredient_concept_id'], unique=False, postgresql_ops={})
    op.create_table('drug_strength',
    sa.Column('ingredient_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('valid_start_date', sa.Date(), nullable=False),
    sa.Column('concentration_value', sa.Numeric(precision=38, scale=0), nullable=True),
    sa.Column('valid_end_date', sa.Date(), nullable=False),
    sa.Column('amount_unit', sa.String(length=60), nullable=True),
    sa.Column('invalid_reason', sa.String(length=1), nullable=True),
    sa.Column('drug_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('concentration_denom_unit', sa.String(length=60), nullable=True),
    sa.Column('concentration_enum_unit', sa.String(length=60), nullable=True),
    sa.Column('amount_value', sa.Numeric(precision=38, scale=0), nullable=True),
    sa.PrimaryKeyConstraint('drug_concept_id', 'ingredient_concept_id', 'valid_end_date', name=op.f('pk_drug_strength'))
    )
    op.create_index(op.f('ix_drug_strength_drug_concept_id_ingredient_concept_id_valid_end_date'), 'drug_strength', ['drug_concept_id', 'ingredient_concept_id', 'valid_end_date'], unique=False, postgresql_ops={})
    op.create_table('relationship',
    sa.Column('defines_ancestry', sa.Integer(), server_default='1', nullable=False),
    sa.Column('relationship_name', sa.String(length=256), nullable=False),
    sa.Column('is_hierarchical', sa.Integer(), nullable=False),
    sa.Column('relationship_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('reverse_relationship', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('relationship_id', name=op.f('pk_relationship'))
    )
    op.create_index(op.f('ix_relationship_relationship_id'), 'relationship', ['relationship_id'], unique=False, postgresql_ops={})
    op.create_table('concept',
    sa.Column('vocabulary_id', sa.Integer(), nullable=False),
    sa.Column('valid_start_date', sa.Date(), nullable=False),
    sa.Column('concept_level', sa.Integer(), nullable=False),
    sa.Column('valid_end_date', sa.Date(), nullable=False),
    sa.Column('concept_name', sa.String(length=256), nullable=False),
    sa.Column('concept_class', sa.String(length=60), nullable=False),
    sa.Column('invalid_reason', sa.String(length=1), nullable=True),
    sa.Column('concept_code', sa.String(length=40), nullable=False),
    sa.Column('concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['vocabulary_id'], [u'vocabulary.vocabulary_id'], name=op.f('fk_concept_vocabulary_id_vocabulary')),
    sa.PrimaryKeyConstraint('concept_id', name=op.f('pk_concept'))
    )
    op.create_index(op.f('ix_concept_concept_id'), 'concept', ['concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_vocabulary_id'), 'concept', ['vocabulary_id'], unique=False, postgresql_ops={})
    op.create_table('concept_synonym',
    sa.Column('concept_synonym_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('concept_synonym_name', sa.String(length=1000), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], [u'concept.concept_id'], name=op.f('fk_concept_synonym_concept_id_concept')),
    sa.PrimaryKeyConstraint('concept_synonym_id', name=op.f('pk_concept_synonym'))
    )
    op.create_index(op.f('ix_concept_synonym_concept_id'), 'concept_synonym', ['concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_synonym_concept_synonym_id'), 'concept_synonym', ['concept_synonym_id'], unique=False, postgresql_ops={})
    op.create_table('concept_relationship',
    sa.Column('valid_end_date', sa.Date(), nullable=False),
    sa.Column('valid_start_date', sa.Date(), nullable=False),
    sa.Column('invalid_reason', sa.String(length=1), nullable=True),
    sa.Column('concept_id_1', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('relationship_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('concept_id_2', sa.Integer(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['concept_id_1'], [u'concept.concept_id'], name=op.f('fk_concept_relationship_concept_id_1_concept')),
    sa.ForeignKeyConstraint(['concept_id_2'], [u'concept.concept_id'], name=op.f('fk_concept_relationship_concept_id_2_concept')),
    sa.ForeignKeyConstraint(['relationship_id'], [u'relationship.relationship_id'], name=op.f('fk_concept_relationship_relationship_id_relationship')),
    sa.PrimaryKeyConstraint('concept_id_1', 'concept_id_2', 'relationship_id', name=op.f('pk_concept_relationship'))
    )
    op.create_index(op.f('ix_concept_relationship_concept_id_1'), 'concept_relationship', ['concept_id_1'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_relationship_concept_id_1_concept_id_2_relationship_id'), 'concept_relationship', ['concept_id_1', 'concept_id_2', 'relationship_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_relationship_concept_id_2'), 'concept_relationship', ['concept_id_2'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_relationship_relationship_id'), 'concept_relationship', ['relationship_id'], unique=False, postgresql_ops={})
    op.create_table('source_to_concept_map',
    sa.Column('valid_end_date', sa.Date(), nullable=False),
    sa.Column('mapping_type', sa.String(length=20), nullable=True),
    sa.Column('valid_start_date', sa.Date(), nullable=False),
    sa.Column('source_code_description', sa.String(length=256), nullable=True),
    sa.Column('invalid_reason', sa.String(length=1), nullable=True),
    sa.Column('primary_map', sa.String(length=1), nullable=True),
    sa.Column('target_vocabulary_id', sa.Integer(), nullable=False),
    sa.Column('source_code', sa.String(length=40), nullable=False),
    sa.Column('source_vocabulary_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('target_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['source_vocabulary_id'], [u'vocabulary.vocabulary_id'], name=op.f('fk_source_to_concept_map_source_vocabulary_id_vocabulary')),
    sa.ForeignKeyConstraint(['target_concept_id'], [u'concept.concept_id'], name=op.f('fk_source_to_concept_map_target_concept_id_concept')),
    sa.ForeignKeyConstraint(['target_vocabulary_id'], [u'vocabulary.vocabulary_id'], name=op.f('fk_source_to_concept_map_target_vocabulary_id_vocabulary')),
    sa.PrimaryKeyConstraint('source_vocabulary_id', 'target_concept_id', 'source_code', 'valid_end_date', name=op.f('pk_source_to_concept_map'))
    )
    op.create_index(op.f('ix_source_to_concept_map_source_code'), 'source_to_concept_map', ['source_code'], unique=False, postgresql_ops={u'source_code': u'varchar_pattern_ops'})
    op.create_index(op.f('ix_source_to_concept_map_source_vocabulary_id'), 'source_to_concept_map', ['source_vocabulary_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_source_to_concept_map_source_vocabulary_id_target_concept_id_source_code_valid_end_date'), 'source_to_concept_map', ['source_vocabulary_id', 'target_concept_id', 'source_code', 'valid_end_date'], unique=False, postgresql_ops={u'source_code': u'varchar_pattern_ops'})
    op.create_index(op.f('ix_source_to_concept_map_target_concept_id'), 'source_to_concept_map', ['target_concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_source_to_concept_map_target_vocabulary_id'), 'source_to_concept_map', ['target_vocabulary_id'], unique=False, postgresql_ops={})
    op.create_table('concept_ancestor',
    sa.Column('descendant_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('min_levels_of_separation', sa.Numeric(precision=38, scale=0), nullable=True),
    sa.Column('ancestor_concept_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('max_levels_of_separation', sa.Numeric(precision=38, scale=0), nullable=True),
    sa.ForeignKeyConstraint(['ancestor_concept_id'], [u'concept.concept_id'], name=op.f('fk_concept_ancestor_ancestor_concept_id_concept')),
    sa.ForeignKeyConstraint(['descendant_concept_id'], [u'concept.concept_id'], name=op.f('fk_concept_ancestor_descendant_concept_id_concept')),
    sa.PrimaryKeyConstraint('ancestor_concept_id', 'descendant_concept_id', name=op.f('pk_concept_ancestor'))
    )
    op.create_index(op.f('ix_concept_ancestor_ancestor_concept_id'), 'concept_ancestor', ['ancestor_concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_ancestor_ancestor_concept_id_descendant_concept_id'), 'concept_ancestor', ['ancestor_concept_id', 'descendant_concept_id'], unique=False, postgresql_ops={})
    op.create_index(op.f('ix_concept_ancestor_descendant_concept_id'), 'concept_ancestor', ['descendant_concept_id'], unique=False, postgresql_ops={})
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_concept_ancestor_descendant_concept_id'), table_name='concept_ancestor')
    op.drop_index(op.f('ix_concept_ancestor_ancestor_concept_id_descendant_concept_id'), table_name='concept_ancestor')
    op.drop_index(op.f('ix_concept_ancestor_ancestor_concept_id'), table_name='concept_ancestor')
    op.drop_table('concept_ancestor')
    op.drop_index(op.f('ix_source_to_concept_map_target_vocabulary_id'), table_name='source_to_concept_map')
    op.drop_index(op.f('ix_source_to_concept_map_target_concept_id'), table_name='source_to_concept_map')
    op.drop_index(op.f('ix_source_to_concept_map_source_vocabulary_id_target_concept_id_source_code_valid_end_date'), table_name='source_to_concept_map')
    op.drop_index(op.f('ix_source_to_concept_map_source_vocabulary_id'), table_name='source_to_concept_map')
    op.drop_index(op.f('ix_source_to_concept_map_source_code'), table_name='source_to_concept_map')
    op.drop_table('source_to_concept_map')
    op.drop_index(op.f('ix_concept_relationship_relationship_id'), table_name='concept_relationship')
    op.drop_index(op.f('ix_concept_relationship_concept_id_2'), table_name='concept_relationship')
    op.drop_index(op.f('ix_concept_relationship_concept_id_1_concept_id_2_relationship_id'), table_name='concept_relationship')
    op.drop_index(op.f('ix_concept_relationship_concept_id_1'), table_name='concept_relationship')
    op.drop_table('concept_relationship')
    op.drop_index(op.f('ix_concept_synonym_concept_synonym_id'), table_name='concept_synonym')
    op.drop_index(op.f('ix_concept_synonym_concept_id'), table_name='concept_synonym')
    op.drop_table('concept_synonym')
    op.drop_index(op.f('ix_concept_vocabulary_id'), table_name='concept')
    op.drop_index(op.f('ix_concept_concept_id'), table_name='concept')
    op.drop_table('concept')
    op.drop_index(op.f('ix_relationship_relationship_id'), table_name='relationship')
    op.drop_table('relationship')
    op.drop_index(op.f('ix_drug_strength_drug_concept_id_ingredient_concept_id_valid_end_date'), table_name='drug_strength')
    op.drop_table('drug_strength')
    op.drop_index(op.f('ix_drug_approval_ingredient_concept_id'), table_name='drug_approval')
    op.drop_table('drug_approval')
    op.drop_index(op.f('ix_vocabulary_vocabulary_id'), table_name='vocabulary')
    op.drop_table('vocabulary')
    ### end Alembic commands ###
